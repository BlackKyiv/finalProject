package ua.training.myWeb.model.dao;

import ua.training.myWeb.model.entity.Edition;

import java.util.List;

/**
 * Data access object for edition related entities.
 */
public interface EditionDao extends GenericDao<Edition> {


    /**
     * Return list of edition from db searching with offset and limit.
     * Required for paging
     *
     * @param offset entities to skip to db
     * @param limit  limit amount of entities
     * @return list of edition entities
     */
    List<Edition> findAllWithOffsetLimit(long offset, long limit);

    /**
     * Return list of active editions from db searching with offset and limit.
     * Required for paging
     *
     * @param offset entities to skip to db
     * @param limit  limit amount of entities
     * @return list of active edition entities
     */
    List<Edition> findAllWithOffsetLimitActive(long offset, long limit);

    /**
     * Return list of active editions from db searching with offset and limit.
     * With autogenerated query
     *
     * @param themeId id of theme to search
     * @param sort way of sorting
     * @param query query for search in db
     * @param offset entities to skip to db
     * @param limit  limit amount of entities
     * @return filtered list of active edition entities
     */
    List<Edition> findWithOffsetLimitActiveQueryGeneration(long offset, long limit, long themeId, String sort, String query);

    /**
     * Counts all active editions
     */
    Long countActive();

    /**
     * Counts all active editions with autogenerated query
     */
    Long countActiveQueryGeneration(long themeId, String sort, String query);
}
